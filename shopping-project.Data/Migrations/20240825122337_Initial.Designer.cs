// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using shopping_project.Data.Entities;

#nullable disable

namespace shopping_project.Data.Migrations
{
    [DbContext(typeof(ShoppingContext))]
    [Migration("20240825122337_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("shopping_project.Data.Entities.TblAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_Tbl Address_UserId")
                        .IsUnique();

                    b.ToTable("Tbl Address");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TblCart");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "CartId", "ProductId" }, "UC_CartId_ProductId")
                        .IsUnique();

                    b.ToTable("TblCartItem");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("TblCategory");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "ImgUrl" }, "IX_TblImage_ImgUrl");

                    b.ToTable("TblImage");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("TblPayment");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12, 0)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("TblProduct");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("TblRating");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("TblRole");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit")
                        .HasColumnName("isVerified");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("ShippingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tell")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Tell" }, "IX_TblUser_Tell");

                    b.ToTable("TblUser");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblVerifiedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Tell")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("TblVerifiedUsers");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblAddress", b =>
                {
                    b.HasOne("shopping_project.Data.Entities.TblUser", "User")
                        .WithOne("TblAddress")
                        .HasForeignKey("shopping_project.Data.Entities.TblAddress", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Tbl Address_TblUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblCart", b =>
                {
                    b.HasOne("shopping_project.Data.Entities.TblUser", "User")
                        .WithMany("TblCarts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TblCart_TblUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblCartItem", b =>
                {
                    b.HasOne("shopping_project.Data.Entities.TblCart", "Cart")
                        .WithMany("TblCartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TblCartItem_TblCart");

                    b.HasOne("shopping_project.Data.Entities.TblProduct", "Product")
                        .WithMany("TblCartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TblCartItem_TblProduct");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblImage", b =>
                {
                    b.HasOne("shopping_project.Data.Entities.TblProduct", "Product")
                        .WithMany("TblImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TblImage_TblProduct");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblProduct", b =>
                {
                    b.HasOne("shopping_project.Data.Entities.TblCategory", "Category")
                        .WithMany("TblProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_TblProduct_TblCategory");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblRating", b =>
                {
                    b.HasOne("shopping_project.Data.Entities.TblProduct", "Product")
                        .WithMany("TblRatings")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TblRating_TblProduct");

                    b.HasOne("shopping_project.Data.Entities.TblUser", "User")
                        .WithMany("TblRatings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_TblRating_TblUser");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblUser", b =>
                {
                    b.HasOne("shopping_project.Data.Entities.TblRole", "Role")
                        .WithMany("TblUsers")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_TblUser_TblRole");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblCart", b =>
                {
                    b.Navigation("TblCartItems");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblCategory", b =>
                {
                    b.Navigation("TblProducts");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblProduct", b =>
                {
                    b.Navigation("TblCartItems");

                    b.Navigation("TblImages");

                    b.Navigation("TblRatings");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblRole", b =>
                {
                    b.Navigation("TblUsers");
                });

            modelBuilder.Entity("shopping_project.Data.Entities.TblUser", b =>
                {
                    b.Navigation("TblAddress");

                    b.Navigation("TblCarts");

                    b.Navigation("TblRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
